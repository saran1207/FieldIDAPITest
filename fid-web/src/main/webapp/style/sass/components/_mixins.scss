//---------------------------
// MIXINS
//---------------------------

// For clearing floats h5bp.com/q
// Can also be used as a helper class. Found in utilities.scss
@mixin clearfix() {
	*zoom: 1;
	position: relative;
	
	&:before,
	&:after {
		display: table;
		content: "";
		// Fixes Opera/contenteditable bug:
		// http://nicolasgallagher.com/micro-clearfix-hack/#comment-36952
		line-height: 0;
	}
	&:after {
		clear: both;
	}
}

// IE7 inline-block
@mixin ie7-inline-block() {
  *display: inline; /* IE7 inline-block hack */
  *zoom: 1;
}

// Opacity
@mixin opacity($opacity) {
	zoom: 1;
	filter: alpha(opacity=$opacity);
	opacity: $opacity / 100;
}

// Set opacity to only the background (not text/content)
@mixin bg-opacity($color, $opacity) {
	background: rgba(red($color), green($color), blue($color), $opacity);
}

// Hides text that is included for accessibility but hidden for style
// ex. icon button
@mixin text-hide() {
	font: "0/0" a;
	color: transparent;
	text-shadow: none;
	background-color: transparent;
	border: 0;
}

//Used for button hover & selected effects.
//The only variable that changes is the inset color based on the color of the of the button.
@mixin btn-hover($color, $percent) {
  @include shadow(inset 0 0 18px darken($color, $percent));
}

//Creates a border around a block of text with a lighter background colour.
//Currently used for warnings, errors and messages.
@mixin border-bg($color, $percent) {
	border: 1px solid $color;
	background: lighten($color, $percent);
	font-size: $small-font-size;
}

//Truncate string with ellipsis. 
//Width should be set to the max width string should be before it gets truncated.
@mixin truncate($width) {
	width: $width;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}


// TYPOGRAPHY
// -----------
// Defaults to normal weight. Use variables for semibold and bold
@mixin proxima-nova() {
	font-family: $proxima-nova;
	font-style: normal;
	font-weight: 400;
}

// CSS3 PROPERTIES
// ----------------

// Used to adjust the box layout model to any elements
// border-box removes padding conflicts -- padding & border does not increase the size of the element
// content-box is the default value
@mixin box-sizing($value){
	-webkit-box-sizing: $value;
	-moz-box-sizing: $value;
	box-sizing: $value;
	*behavior: url(../javascript/boxsizing.htc); // IE 6 & 7
}

// Border Radius
@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

// Single Corner Border Radius
@mixin border-top-left-radius($radius) {
	-webkit-border-top-left-radius: $radius;
	-moz-border-radius-topleft: $radius;
	border-top-left-radius: $radius;
}
@mixin border-top-right-radius($radius) {
	-webkit-border-top-right-radius: $radius;
	-moz-border-radius-topright: $radius;
	border-top-right-radius: $radius;
}
@mixin border-bottom-right-radius($radius) {
	-webkit-border-bottom-right-radius: $radius;
	-moz-border-radius-bottomright: $radius;
	border-bottom-right-radius: $radius;
}
@mixin border-bottom-left-radius($radius) {
	-webkit-border-bottom-left-radius: $radius;
	-moz-border-radius-bottomleft: $radius;
	border-bottom-left-radius: $radius;
}

// Single Side Border Radius
@mixin border-top-radius($radius) {
	@include border-top-right-radius($radius);
	@include border-top-left-radius($radius);
}
@mixin border-right-radius($radius) {
	@include border-top-right-radius($radius);
	@include border-bottom-right-radius($radius);
}
@mixin border-bottom-radius($radius) {
	@include border-bottom-right-radius($radius);
	@include border-bottom-left-radius($radius);
}
@mixin border-left-radius($radius) {
	@include border-top-left-radius($radius);
	@include border-bottom-left-radius($radius);
}

// Drop shadows
// horizontal offset, vertical offset, blur radius, spread radius, color
@mixin shadow($shadow) {
	-webkit-box-shadow: $shadow;
	box-shadow: $shadow;
}

// Transitions
@mixin transition($transition) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

//---------------------------------------------------
//  scss Elements 0.9
//  More info at: http://scsselements.com
//---------------------------------------------------

@mixin gradient($color, $start, $stop) {
  background: $color;
  background: -webkit-gradient(linear, left bottom, left top, color-stop(0, $start), color-stop(1, $stop));
  background: -ms-linear-gradient(bottom, $start, $stop);
  background: -moz-linear-gradient(center bottom, $start 0%, $stop 100%);
  background: -o-linear-gradient($stop, $start);
  //filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",$stop,$start));
}
