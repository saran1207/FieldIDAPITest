require "inspectionmaster"
require "product"
class FixHalosExtraProoftestUploads < ActiveRecord::Migration
  def self.up
    halo = 10802300
    serial_numbers = [
      'AS108'  ,
      'AS109'  ,
      'AS110'  ,
      'AS111'  ,
      'AS112'  ,
      'AS113'  ,
      'HF2402' ,
      'HF2403' ,
      'HF2404' ,
      'HF2405' ,
      'HF2406' ,
      'HF2407' ,
      'HF2408' ,
      'AS106'  ,
      'AS107'  ,
      'HF2399' ,
      'HF2400' ,
      'AS105'  ,
      'HF2401' ,
      'AS153'  ,
      'AS154'  ,
      'AS155'  ,
      'AS156'  ,
      'AS157'  ,
      'AS158'  ,
      'AS159'  ,
      'AS160'  ,
      'AS161'  ,
      'AS162'  ,
      'AS163'  ,
      'AS164'  ,
      'HF1950' ,
      'HF1953' ,
      'HF2075' ,
      'HF2275' ,
      'HF2277' ,
      'HF2278' ,
      'HF2279' ,
      'HF2280' ,
      'HF2282' ,
      'HF2287' ,
      'HF2288' ,
      'HF2289' ,
      'HF2290' ,
      'HF2291' ,
      'HF2292' ,
      'HF2293' ,
      'HF2294' ,
      'HF2295' ,
      'HF2322' ,
      'HF2390' ,
      'HF2391' ,
      'HF2392' ,
      'HF2603' ,
      'HF3035' ,
      'PP130'  ,
      'PP145'  ,
      'PP147'  ,
      'PP148'  ,
      'PP149'  ,
      'PP150'  ,
      'PP151'  ,
      'PP152'  ,
      'PP153'  ,
      'PP154'  ,
      'PP155'  ,
      'PP156'  ,
      'PP157'  ,
      'PP158'  ,
      'PP159'  ,
      'PP160'  ,
      'PP161'  ,
      'PP162'  ,
      'PP163'  ,
      'PP164'  ,
      'PP165'  ,
      'PP166'  ,
      'PP167'  ,
      'PP168'  ,
      'PP169'  ,
      'PP170'  ,
      'PP171'  ,
      'PP172'  ,
      'PP173'  ,
      'PP174'  ,
      'PP175'  ,
      'PP176'  ,
      'PP177'  ,
      'PP178'  ,
      'PP179'  ,
      'PP180'  ,
      'PP181'  ,
      'PP182'  ,
      'PP183'  ,
      'PP184'  ,
      'PP185'  ,
      'PP186'  ,
      'PP187'  ,
      'PP188'  ,
      'PP189'  ,
      'PP190'  ,
      'PP191'  ,
      'PP192'  ,
      'PP193'  ,
      'PP194'  ,
      'PP195'  ,
      'PP196'  ,
      'PP197'  ,
      'PP198'  ,
      'PP199'  ,
      'PP200'  ,
      'PP505'  ,
      'PP508'  ,
      'PP511'  ,
      'PP522'  ,
      'PP622'  ,
      'PP717'  ,
      'HF2276' ,
      'HF2284' ,
      'HF2285' ,
      'HF2286' ,
      'AS138'  ,
      'AS139'  ,
      'AS140'  ,
      'AS141'  ,
      'AS142'  ,
      'AS143'  ,
      'AS144'  ,
      'AS145'  ,
      'AS146'  ,
      'AS148'  ,
      'AS149'  ,
      'AS150'  ,
      'AS151'  ,
      'AS152'  ,
      'test985',
      'AS124'  ,
      'AS125'  ,
      'AS126'  ,
      'AS127'  ,
      'AS128'  ,
      'AS129'  ,
      'AS130'  ,
      'AS131'  ,
      'AS132'  ,
      'AS133'  ,
      'AS134'  ,
      'AS135'  ,
      'AS136'  ,
      'AS137'  ,
      'AS147'  ,
      'HF2283' ,
      'AS123'  ,
      'AS120'  ,
      'AS121'  ,
      'AS122'  ,
      'AS119'  ,
      'AS114'  ,
      'AS115'  ,
      'AS116'  ,
      'AS117'  ,
      'AS118']
    Product.find_in_batches(:conditions => { :r_tenant => halo, :state => 'ACTIVE', :serialnumber => serial_numbers}) do | products |
      for product in products 
        masterInspectionsFound = Array.new 
        puts product.id.to_s
        
        inspections = AbstractInspection.find(:all, :conditions => {:product_id => product.id}, :order => :id)
        
        for inspection in inspections do 
          master = Inspection.find(inspection.id)
          masterInspectionsFound << master unless (master.state != 'ACTIVE') 
        end
        
        if masterInspectionsFound.size > 1
          masterInspectionsFound.pop  # remove the last inspection this is the one we are going to keep
          for masterInspection in masterInspectionsFound
            puts "saving inspection" + masterInspection.inspection_id.to_s
            masterInspection.state = 'DELETE'
            masterInspection.save
          end
        end
      end
    end
  end
end