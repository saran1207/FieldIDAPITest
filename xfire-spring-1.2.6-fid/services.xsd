<?xml version='1.0'?>
<!-- NOTE: this file is autogenerated by Apache XBean -->

<xs:schema elementFormDefault='qualified'
           targetNamespace='http://xfire.codehaus.org/config/1.0'
           xmlns:xs='http://www.w3.org/2001/XMLSchema'
           xmlns:tns='http://xfire.codehaus.org/config/1.0'>

  <!-- element for type: org.codehaus.xfire.spring.config.EndpointBean -->
  <xs:element name='endpoint'>
    <xs:complexType>
      <xs:attribute name='name' type='xs:QName'/>
      <xs:attribute name='url' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.codehaus.xfire.spring.config.HandlerFactory -->
  <xs:element name='handler'>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='after' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='before' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other'/>
      </xs:sequence>
      <xs:attribute name='after' type='xs:string'/>
      <xs:attribute name='before' type='xs:string'/>
      <xs:attribute name='handlerClass' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.codehaus.xfire.spring.config.HandlerNameBean -->
  <xs:element name='handlerName'>
    <xs:complexType>
      <xs:attribute name='handler' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.codehaus.xfire.spring.config.MethodBean -->
  <xs:element name='method'>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='parameters' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='properties' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='returnType' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:choice minOccurs='0' maxOccurs='1'>
              <xs:element ref='tns:parameter'/>
              <xs:any namespace='##other'/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other'/>
      </xs:sequence>
      <xs:attribute name='exclude' type='xs:boolean'/>
      <xs:attribute name='mep' type='xs:string'/>
      <xs:attribute name='name' type='xs:string'/>
      <xs:attribute name='operationName' type='xs:string'/>
      <xs:attribute name='properties' type='xs:string'/>
      <xs:attribute name='returnType' type='xs:string'/>
      <xs:attribute name='soapAction' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.codehaus.xfire.spring.config.ParameterBean -->
  <xs:element name='parameter'>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='header' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other'/>
      </xs:sequence>
      <xs:attribute name='class' type='xs:string'/>
      <xs:attribute name='header' type='xs:string'/>
      <xs:attribute name='index' type='xs:integer'/>
      <xs:attribute name='mode' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Specifies whether this parameter is "in", "inout", or "out".
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='name' type='xs:QName'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.codehaus.xfire.spring.config.SchemaBean -->
  <xs:element name='schema'>
    <xs:complexType>
      <xs:attribute name='location' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.codehaus.xfire.spring.ServiceBean -->
  <xs:element name='service'>
    <xs:annotation>
      <xs:documentation><![CDATA[
        A convenience bean which creates a Service from a ServiceFactory instance. If there is no ServiceFactory set, ServiceBean will create one from the ObjectServiceFactory. <p> Alternatively, the <code>Jsr181BeanPostProcessor</code> or the <code>XFireExporter</code>may be used.
      ]]></xs:documentation>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='applicationContext' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='bindings' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='executor' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='faultHandlers' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='inHandlers' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='invoker' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='methods' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='outHandlers' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='properties' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='schemas' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceBean' minOccurs='0' maxOccurs='1'>
          <xs:annotation>
            <xs:documentation><![CDATA[
              Gets the object which backs this service.
            ]]></xs:documentation>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='serviceFactory' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='xfire' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other'/>
      </xs:sequence>
      <xs:attribute name='applicationContext' type='xs:string'/>
      <xs:attribute name='createDefaultBindings' type='xs:boolean'/>
      <xs:attribute name='executor' type='xs:string'/>
      <xs:attribute name='implementationClass' type='xs:string'/>
      <xs:attribute name='invoker' type='xs:string'/>
      <xs:attribute name='name' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Sets the service name. Default is the bean name of this exporter.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='namespace' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Sets the service default namespace. Default is a namespace based on the package of the {@link #getServiceClass() service interface}.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='properties' type='xs:string'/>
      <xs:attribute name='scope' type='xs:string'/>
      <xs:attribute name='serviceBean' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Gets the object which backs this service.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='serviceClass' type='xs:string'>
        <xs:annotation>
          <xs:documentation><![CDATA[
            Set the service class. The service class is passed to the ServiceFactory's create method and is used to determine the operations on the service.
          ]]></xs:documentation>
        </xs:annotation>
      </xs:attribute>
      <xs:attribute name='serviceFactory' type='xs:string'/>
      <xs:attribute name='style' type='xs:string'/>
      <xs:attribute name='use' type='xs:string'/>
      <xs:attribute name='wsdlURL' type='xs:string'/>
      <xs:attribute name='xfire' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.codehaus.xfire.spring.config.Soap11BindingBean -->
  <xs:element name='soap11Binding'>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='endpoints' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other'/>
      </xs:sequence>
      <xs:attribute name='allowUndefinedEndpoints' type='xs:boolean'/>
      <xs:attribute name='name' type='xs:QName'/>
      <xs:attribute name='transport' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.codehaus.xfire.spring.config.Soap12BindingBean -->
  <xs:element name='soap12Binding'>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='endpoints' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other'/>
      </xs:sequence>
      <xs:attribute name='allowUndefinedEndpoints' type='xs:boolean'/>
      <xs:attribute name='name' type='xs:QName'/>
      <xs:attribute name='transport' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


  <!-- element for type: org.codehaus.xfire.spring.config.XFireBean -->
  <xs:element name='xfire'>
    <xs:complexType>
      <xs:sequence>
        <xs:element name='applicationContext' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='faultHandlers' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='inHandlers' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='outHandlers' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='properties' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='1'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name='transports' minOccurs='0' maxOccurs='1'>
          <xs:complexType>
            <xs:sequence minOccurs='0' maxOccurs='unbounded'><xs:any namespace='##other'/></xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:any namespace='##other'/>
      </xs:sequence>
      <xs:attribute name='applicationContext' type='xs:string'/>
      <xs:attribute name='properties' type='xs:string'/>
      <xs:attribute name='id' type='xs:ID'/>
      <xs:anyAttribute namespace='##other' processContents='lax'/>
    </xs:complexType>
  </xs:element>


</xs:schema>
