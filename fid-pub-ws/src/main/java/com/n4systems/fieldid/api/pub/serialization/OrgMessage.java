// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: src/main/protocol//org.proto
package com.n4systems.fieldid.api.pub.serialization;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class OrgMessage extends Message {

  public static final String DEFAULT_ID = "";
  public static final String DEFAULT_NAME = "";
  public static final String DEFAULT_PARENTID = "";
  public static final String DEFAULT_CODE = "";
  public static final String DEFAULT_NOTES = "";
  public static final String DEFAULT_STREETADDRESS = "";
  public static final String DEFAULT_CITY = "";
  public static final String DEFAULT_STATE = "";
  public static final String DEFAULT_COUNTRY = "";
  public static final String DEFAULT_ZIP = "";
  public static final String DEFAULT_PHONE1 = "";
  public static final String DEFAULT_PHONE2 = "";
  public static final String DEFAULT_FAX1 = "";
  public static final String DEFAULT_LATITUDE = "";
  public static final String DEFAULT_LONGITUDE = "";
  public static final String DEFAULT_CONTACTNAME = "";
  public static final String DEFAULT_CONTACTEMAIL = "";

  @ProtoField(tag = 1, type = STRING, label = REQUIRED)
  public final String id;

  @ProtoField(tag = 2, type = STRING, label = REQUIRED)
  public final String name;

  @ProtoField(tag = 3, type = STRING)
  public final String parentId;

  @ProtoField(tag = 4, type = STRING)
  public final String code;

  @ProtoField(tag = 5, type = STRING)
  public final String notes;

  @ProtoField(tag = 6, type = STRING)
  public final String streetAddress;

  @ProtoField(tag = 7, type = STRING)
  public final String city;

  @ProtoField(tag = 8, type = STRING)
  public final String state;

  @ProtoField(tag = 9, type = STRING)
  public final String country;

  @ProtoField(tag = 10, type = STRING)
  public final String zip;

  @ProtoField(tag = 11, type = STRING)
  public final String phone1;

  @ProtoField(tag = 12, type = STRING)
  public final String phone2;

  @ProtoField(tag = 13, type = STRING)
  public final String fax1;

  @ProtoField(tag = 14, type = STRING)
  public final String latitude;

  @ProtoField(tag = 15, type = STRING)
  public final String longitude;

  @ProtoField(tag = 16, type = STRING)
  public final String contactName;

  @ProtoField(tag = 17, type = STRING)
  public final String contactEmail;

  public OrgMessage(String id, String name, String parentId, String code, String notes, String streetAddress, String city, String state, String country, String zip, String phone1, String phone2, String fax1, String latitude, String longitude, String contactName, String contactEmail) {
    this.id = id;
    this.name = name;
    this.parentId = parentId;
    this.code = code;
    this.notes = notes;
    this.streetAddress = streetAddress;
    this.city = city;
    this.state = state;
    this.country = country;
    this.zip = zip;
    this.phone1 = phone1;
    this.phone2 = phone2;
    this.fax1 = fax1;
    this.latitude = latitude;
    this.longitude = longitude;
    this.contactName = contactName;
    this.contactEmail = contactEmail;
  }

  private OrgMessage(Builder builder) {
    this(builder.id, builder.name, builder.parentId, builder.code, builder.notes, builder.streetAddress, builder.city, builder.state, builder.country, builder.zip, builder.phone1, builder.phone2, builder.fax1, builder.latitude, builder.longitude, builder.contactName, builder.contactEmail);
    setBuilder(builder);
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof OrgMessage)) return false;
    OrgMessage o = (OrgMessage) other;
    return equals(id, o.id)
        && equals(name, o.name)
        && equals(parentId, o.parentId)
        && equals(code, o.code)
        && equals(notes, o.notes)
        && equals(streetAddress, o.streetAddress)
        && equals(city, o.city)
        && equals(state, o.state)
        && equals(country, o.country)
        && equals(zip, o.zip)
        && equals(phone1, o.phone1)
        && equals(phone2, o.phone2)
        && equals(fax1, o.fax1)
        && equals(latitude, o.latitude)
        && equals(longitude, o.longitude)
        && equals(contactName, o.contactName)
        && equals(contactEmail, o.contactEmail);
  }

  @Override
  public int hashCode() {
    int result = hashCode;
    if (result == 0) {
      result = id != null ? id.hashCode() : 0;
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (parentId != null ? parentId.hashCode() : 0);
      result = result * 37 + (code != null ? code.hashCode() : 0);
      result = result * 37 + (notes != null ? notes.hashCode() : 0);
      result = result * 37 + (streetAddress != null ? streetAddress.hashCode() : 0);
      result = result * 37 + (city != null ? city.hashCode() : 0);
      result = result * 37 + (state != null ? state.hashCode() : 0);
      result = result * 37 + (country != null ? country.hashCode() : 0);
      result = result * 37 + (zip != null ? zip.hashCode() : 0);
      result = result * 37 + (phone1 != null ? phone1.hashCode() : 0);
      result = result * 37 + (phone2 != null ? phone2.hashCode() : 0);
      result = result * 37 + (fax1 != null ? fax1.hashCode() : 0);
      result = result * 37 + (latitude != null ? latitude.hashCode() : 0);
      result = result * 37 + (longitude != null ? longitude.hashCode() : 0);
      result = result * 37 + (contactName != null ? contactName.hashCode() : 0);
      result = result * 37 + (contactEmail != null ? contactEmail.hashCode() : 0);
      hashCode = result;
    }
    return result;
  }

  public static final class Builder extends Message.Builder<OrgMessage> {

    public String id;
    public String name;
    public String parentId;
    public String code;
    public String notes;
    public String streetAddress;
    public String city;
    public String state;
    public String country;
    public String zip;
    public String phone1;
    public String phone2;
    public String fax1;
    public String latitude;
    public String longitude;
    public String contactName;
    public String contactEmail;

    public Builder() {
    }

    public Builder(OrgMessage message) {
      super(message);
      if (message == null) return;
      this.id = message.id;
      this.name = message.name;
      this.parentId = message.parentId;
      this.code = message.code;
      this.notes = message.notes;
      this.streetAddress = message.streetAddress;
      this.city = message.city;
      this.state = message.state;
      this.country = message.country;
      this.zip = message.zip;
      this.phone1 = message.phone1;
      this.phone2 = message.phone2;
      this.fax1 = message.fax1;
      this.latitude = message.latitude;
      this.longitude = message.longitude;
      this.contactName = message.contactName;
      this.contactEmail = message.contactEmail;
    }

    public Builder id(String id) {
      this.id = id;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder parentId(String parentId) {
      this.parentId = parentId;
      return this;
    }

    public Builder code(String code) {
      this.code = code;
      return this;
    }

    public Builder notes(String notes) {
      this.notes = notes;
      return this;
    }

    public Builder streetAddress(String streetAddress) {
      this.streetAddress = streetAddress;
      return this;
    }

    public Builder city(String city) {
      this.city = city;
      return this;
    }

    public Builder state(String state) {
      this.state = state;
      return this;
    }

    public Builder country(String country) {
      this.country = country;
      return this;
    }

    public Builder zip(String zip) {
      this.zip = zip;
      return this;
    }

    public Builder phone1(String phone1) {
      this.phone1 = phone1;
      return this;
    }

    public Builder phone2(String phone2) {
      this.phone2 = phone2;
      return this;
    }

    public Builder fax1(String fax1) {
      this.fax1 = fax1;
      return this;
    }

    public Builder latitude(String latitude) {
      this.latitude = latitude;
      return this;
    }

    public Builder longitude(String longitude) {
      this.longitude = longitude;
      return this;
    }

    public Builder contactName(String contactName) {
      this.contactName = contactName;
      return this;
    }

    public Builder contactEmail(String contactEmail) {
      this.contactEmail = contactEmail;
      return this;
    }

    @Override
    public OrgMessage build() {
      checkRequiredFields();
      return new OrgMessage(this);
    }
  }
}
